@model BugTracker.Models.EditTicketViewModel
@{
    ViewBag.Title = "Edit";
}

<div class="col-md-6">
    <div class="card">
        @using (Html.BeginForm())
        {
            <div class="card-header">
                <h4 class="card-title">
                    Edit Ticket (Project: <i>@Html.Raw(Model.Ticket.Project.Title)</i>)
                </h4>
            </div>
            <div class="card-content">
                <p class="text-muted">
                    @Html.Raw(Model.Ticket.Project.Description)
                </p>
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Ticket.Id)
                @Html.HiddenFor(model => model.Ticket.OwnerUserId)
                @Html.HiddenFor(model => model.Ticket.ProjectId)
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.Title, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ticket.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ticket.Title, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ticket.Description, new { htmlAttributes = new { @class = "form-control", placeholder = Model.Ticket.Description } })
                    @Html.ValidationMessageFor(model => model.Ticket.Description, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("Ticket.TicketTypeId", Model.TicketTypeId, new { @class = "selectpicker", title = "Ticket Type", data_style = "btn btn-block", data_size = "7" })
                    @Html.ValidationMessageFor(model => model.Ticket.TicketTypeId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("Ticket.TicketPriorityId", Model.TicketPriorityId, new { @class = "selectpicker", title = "Ticket Priority", data_style = "btn btn-block", data_size = "7" })
                    @Html.ValidationMessageFor(model => model.Ticket.TicketPriorityId, "", new { @class = "text-danger" })
                </div>
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("Ticket.TicketStatusId", Model.TicketStatusId, new { @class = "selectpicker", title = "Ticket Status", data_style = "btn btn-block", data_size = "7" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                    if (Model.AssignToUserId != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignToUserId, "Asignee", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("Ticket.AssignToUserId", Model.AssignToUserId, new { @class = "selectpicker", title = "Assignee", data_style = "btn btn-block", data_size = "7" })
                            @Html.ValidationMessageFor(model => model.AssignToUserId, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        <p class="text-warning">Sorry, there are no develoeprs assigned to the project this ticket is associated with.</p>
                    }
                }
                @if (User.IsInRole("Developer"))
                {
                    @Html.HiddenFor(model => model.Ticket.AssignToUserId)
                }
                <button type="submit" class="btn btn-fill btn-info">Submit</button>
            </div>
        }
    </div> <!-- end card -->
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
}